{"version":3,"sources":["meteor://💻app/imports/api/accounts/server/methods.js","meteor://💻app/imports/api/blocks/server/methods.js","meteor://💻app/imports/api/blocks/server/publications.js","meteor://💻app/imports/api/blocks/blocks.js","meteor://💻app/imports/api/chain/server/methods.js","meteor://💻app/imports/api/chain/server/publications.js","meteor://💻app/imports/api/chain/chain.js","meteor://💻app/imports/api/coin-stats/server/methods.js","meteor://💻app/imports/api/coin-stats/coin-stats.js","meteor://💻app/imports/api/delegations/server/methods.js","meteor://💻app/imports/api/delegations/delegations.js","meteor://💻app/imports/api/fundingcycles/server/methods.js","meteor://💻app/imports/api/fundingcycles/server/publications.js","meteor://💻app/imports/api/fundingcycles/fundingcycles.js","meteor://💻app/imports/api/proposals/server/methods.js","meteor://💻app/imports/api/proposals/server/publications.js","meteor://💻app/imports/api/proposals/proposals.js","meteor://💻app/imports/api/records/server/methods.js","meteor://💻app/imports/api/records/server/publications.js","meteor://💻app/imports/api/records/records.js","meteor://💻app/imports/api/status/server/publications.js","meteor://💻app/imports/api/status/status.js","meteor://💻app/imports/api/transactions/server/methods.js","meteor://💻app/imports/api/transactions/server/publications.js","meteor://💻app/imports/api/transactions/transactions.js","meteor://💻app/imports/api/validators/server/methods.js","meteor://💻app/imports/api/validators/server/publications.js","meteor://💻app/imports/api/validators/validators.js","meteor://💻app/imports/api/voting-power/history.js","meteor://💻app/imports/api/evidences/evidences.js","meteor://💻app/imports/api/validator-sets/validator-sets.js","meteor://💻app/imports/startup/both/index.js","meteor://💻app/imports/startup/server/create-indexes.js","meteor://💻app/imports/startup/server/index.js","meteor://💻app/imports/startup/server/register-api.js","meteor://💻app/imports/startup/server/util.js","meteor://💻app/imports/ui/components/Icons.jsx","meteor://💻app/both/utils/coins.js","meteor://💻app/server/main.js"],"names":["Meteor","module","link","v","HTTP","methods","address","unblock","balance","url","LCD","available","get","statusCode","JSON","parse","content","length","e","console","log","delegations","unbonding","rewards","forEach","delegation","i","shares","parseFloat","unbondings","Promise","Blockscon","Chain","ValidatorSets","Validators","ValidatorRecords","Analytics","VPDistributions","VotingPowerHistory","Transactions","Evidences","sha256","getAddress","getRemovedValidators","prevValidators","validators","p","splice","blocks","find","proposerAddress","fetch","heights","map","block","height","blocksStats","$in","totalBlockDiff","b","timeDiff","collection","rawCollection","pipeline","$match","$sort","$limit","settings","public","uptimeWindow","$unwind","$group","$cond","$eq","await","aggregate","toArray","RPC","response","status","result","sync_info","latest_block_height","currHeight","sort","limit","params","startHeight","SYNCING","until","call","curr","validatorSet","startBlockTime","Date","analyticsData","bulkValidators","initializeUnorderedBulkOp","bulkValidatorRecords","bulkVPHistory","bulkTransations","startGetHeightTime","blockData","hash","block_meta","block_id","transNum","header","num_txs","time","lastBlockHash","last_block_id","proposer_address","precommits","last_commit","push","validator_address","data","txs","t","Buffer","from","err","evidence","insert","precommitsCount","endGetHeightTime","startGetValidatorsTime","block_height","parseInt","validatorsCount","startBlockInsertTime","endBlockInsertTime","existingValidators","$exists","record","exists","voting_power","j","numBlocks","uptime","base","upsert","updateOne","$set","lastSeen","chainStatus","findOne","chainId","chain_id","lastSyncedTime","blockTime","defaultBlockTime","dateLatest","dateLast","Math","abs","getTime","endGetValidatorsTime","update","averageBlockTime","startFindValidatorsNameTime","validator","proposer_priority","valExist","pub_key","value","accpub","bech32PrefixAccPub","operator_pubkey","bech32PrefixValPub","consensus_pubkey","bech32PrefixConsPub","val","operator_address","delegator_address","jailed","min_self_delegation","tokens","league","delegator_shares","description","bond_height","bond_intra_tx_counter","unbonding_height","unbonding_time","commission","self_delegation","prev_voting_power","type","block_time","selfDelegation","prevVotingPower","changeType","changeData","removedValidators","r","endFindValidatorsNameTime","startAnayticsInsertTime","endAnalyticsInsertTime","startVUpTime","execute","endVUpTime","startVRTime","endVRTime","activeValidators","numTopTwenty","ceil","numBottomEighty","topTwentyPower","bottomEightyPower","numTopThirtyFour","numBottomSixtySix","topThirtyFourPercent","bottomSixtySixPercent","vpDist","numValidators","totalVotingPower","createAt","endBlockTime","lastBlocksSyncedTime","totalValidators","publishComposite","children","export","Mongo","Collection","helpers","proposer","ChainStates","findVotingPower","genValidators","power","consensus","round_state","round","step","votedPower","votes","prevotes_bit_array","split","votingHeight","votingRound","votingStep","prevotes","chain","node_info","network","latestBlockHeight","latestBlockTime","latest_block_time","activeVP","activeVotingPower","chainStates","bonding","bondedTokens","bonded_tokens","notBondedTokens","not_bonded_tokens","pool","communityPool","amount","denom","inflation","deflation","minting","provisions","annualProvisions","created","readGenesis","genesisFile","genesis","chainParams","genesisTime","genesis_time","consensusParams","consensus_params","auth","app_state","bank","staking","mint","distr","communityTax","community_tax","baseProposerReward","base_proposer_reward","bonusProposerReward","bonus_proposer_reward","withdrawAddrEnabled","withdraw_addr_enabled","gov","startingProposalId","starting_proposal_id","depositParams","deposit_params","votingParams","voting_params","tallyParams","tally_params","slashing","gentxs","msg","m","pubkey","floor","stakingFraction","pubkeyValue","genValidatorsSet","CoinStats","publish","last_updated_at","fields","coinId","coingeckoId","now","setMinutes","Delegations","concat","createdAt","FundingCycless","FundingCycles","FundingCycleIds","bulkFundingCycles","FundingCycle","cycleId","cycle_id","check","id","Number","Proposals","proposals","proposalIds","bulkProposals","proposal","proposalId","proposal_id","$nin","deposits","getVoteDetail","tally","updatedAt","voters","vote","voter","votingPowerMap","validatorAddressMap","moniker","delegatorShares","deductedShares","votingPower","undefined","AverageData","AverageValidatorData","Status","MissedBlocksStats","count","COUNTMISSEDBLOCKS","latestHeight","explorerStatus","lastMissedBlockHeight","bulkMissedStats","voterAddress","missedRecords","$and","$gt","$lte","counts","existingRecord","bindEnvironment","lastMissedBlockTime","averageVotingPower","analytics","lastMinuteVotingPower","lastMinuteBlockTime","lastHourVotingPower","lastHourBlockTime","lastDayVotingPower","lastDayBlockTime","blockHeights","a","num","conditions","stats","proposerMoniker","voterMoniker","toUpperCase","tx","txId","$or","$lt","includes","bech32PrefixValAddr","bech32PrefixAccAddr","validatorAddress","delegatorAddress","query","txhash","TxIcon","code","direction","options","indexOf","firstSeen","history","createIndex","unique","partialFilterExpression","onPageLoad","Helmet","sink","helmet","renderStatic","appendToHead","meta","toString","title","bech32","default","cheerio","Future","Npm","require","exec","toHexString","byteArray","byte","slice","join","pubkeyToBech32","prefix","pubkeyAminoPrefix","buffer","alloc","copy","encode","toWords","bech32ToPubkey","fromWords","decode","words","getDelegator","operatorAddr","getKeybaseTeamPic","keybaseUrl","teamPage","page","load","attr","DenomSymbol","ProposalStatusIcon","VoteIcon","React","i18n","T","createComponent","props","valid","Coin","numbro","autoformat","formatter","format","constructor","toLowerCase","MintingDenom","_amount","StakingDenom","StakingFraction","Error","stakingAmount","precision","minStake","pow","repeat","mintString","stakeString","stakingDenom","mintingDenom","MinStake","remote","rpc","lcd","timerBlocks","timerChain","timerConsensus","timerProposal","timerFundingCycle","timerProposalsResults","timerMissedBlock","timerDelegation","timerAggregate","updateChainStatus","error","updateBlock","getConsensusState","getProposals","getFundingCycles","getProposalsResults","updateMissedBlockStats","getDelegations","aggregateMinutely","aggregateHourly","aggregateDaily","startup","isDevelopment","process","env","NODE_TLS_REJECT_UNAUTHORIZED","debug","startTimer","setInterval","consensusInterval","blockInterval","statusInterval","proposalInterval","fundingCycleInterval","missedBlocksInterval","delegationInterval","getUTCSeconds","getUTCMinutes","getUTCHours"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\n\nMeteor.methods({\n    'accounts.getBalance': function(address){\n        this.unblock();\n        let balance = {}\n        // get available color\n        let url = LCD + '/bank/balances/'+ address;\n        try{\n            let available = HTTP.get(url);\n            if (available.statusCode == 200){\n                // console.log(JSON.parse(available.content))\n                balance.available = JSON.parse(available.content);\n                if (balance.available && balance.available.length > 0)\n                    balance.available = balance.available[0];\n            }\n        }\n        catch (e){\n            console.log(e)\n        }\n\n        // get delegated amnounts\n        url = LCD + '/staking/delegators/'+address+'/delegations';\n        try{\n            let delegations = HTTP.get(url);\n            if (delegations.statusCode == 200){\n                balance.delegations = JSON.parse(delegations.content);\n            }\n        }\n        catch (e){\n            console.log(e);\n        }\n        // get unbonding\n        url = LCD + '/staking/delegators/'+address+'/unbonding_delegations';\n        try{\n            let unbonding = HTTP.get(url);\n            if (unbonding.statusCode == 200){\n                balance.unbonding = JSON.parse(unbonding.content);\n            }\n        }\n        catch (e){\n            console.log(e);\n        }\n\n        // get rewards\n        url = LCD + '/distribution/delegators/'+address+'/rewards';\n        try{\n            let rewards = HTTP.get(url);\n            if (rewards.statusCode == 200){\n                balance.rewards = JSON.parse(rewards.content);\n            }\n        }\n        catch (e){\n            console.log(e);\n        }\n\n        return balance;\n    },\n    'accounts.getAllDelegations'(address){\n        let url = LCD + '/staking/delegators/'+address+'/delegations';\n\n        try{\n            let delegations = HTTP.get(url);\n            if (delegations.statusCode == 200){\n                delegations = JSON.parse(delegations.content);\n                if (delegations && delegations.length > 0){\n                    delegations.forEach((delegation, i) => {\n                        if (delegations[i] && delegations[i].shares)\n                            delegations[i].shares = parseFloat(delegations[i].shares);\n                    })    \n                }\n                \n                return delegations;\n            };\n        }\n        catch (e){\n            console.log(e);\n        }\n    },\n    'accounts.getAllUnbondings'(address){\n        let url = LCD + '/staking/delegators/'+address+'/unbonding_delegations';\n\n        try{\n            let unbondings = HTTP.get(url);\n            if (unbondings.statusCode == 200){\n                unbondings = JSON.parse(unbondings.content);\n                return unbondings;\n            };\n        }\n        catch (e){\n            console.log(e);\n        }\n    }\n})","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Promise } from \"meteor/promise\";\nimport { Blockscon } from '/imports/api/blocks/blocks.js';\nimport { Chain } from '/imports/api/chain/chain.js';\nimport { ValidatorSets } from '/imports/api/validator-sets/validator-sets.js';\nimport { Validators } from '/imports/api/validators/validators.js';\nimport { ValidatorRecords, Analytics, VPDistributions} from '/imports/api/records/records.js';\nimport { VotingPowerHistory } from '/imports/api/voting-power/history.js';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Evidences } from '../../evidences/evidences.js';\nimport { sha256 } from 'js-sha256';\nimport { getAddress } from 'tendermint/lib/pubkey'\n\n// import Block from '../../../ui/components/Block';\n\n// getValidatorVotingPower = (validators, address) => {\n//     for (v in validators){\n//         if (validators[v].address == address){\n//             return parseInt(validators[v].voting_power);\n//         }\n//     }\n// }\n\ngetRemovedValidators = (prevValidators, validators) => {\n    // let removeValidators = [];\n    for (p in prevValidators){\n        for (v in validators){\n            if (prevValidators[p].address == validators[v].address){\n                prevValidators.splice(p,1);\n            }\n        }\n    }\n\n    return prevValidators;\n}\n\n// var filtered = [1, 2, 3, 4, 5].filter(notContainedIn([1, 2, 3, 5]));\n// console.log(filtered); // [4]\n\nMeteor.methods({\n    'blocks.averageBlockTime'(address){\n        let blocks = Blockscon.find({proposerAddress:address}).fetch();\n        let heights = blocks.map((block, i) => {\n            return block.height;\n        });\n        let blocksStats = Analytics.find({height:{$in:heights}}).fetch();\n        // console.log(blocksStats);\n\n        let totalBlockDiff = 0;\n        for (b in blocksStats){\n            totalBlockDiff += blocksStats[b].timeDiff;\n        }\n        return totalBlockDiff/heights.length;\n    },\n    'blocks.findUpTime'(address){\n        let collection = ValidatorRecords.rawCollection();\n        // let aggregateQuery = Meteor.wrapAsync(collection.aggregate, collection);\n        var pipeline = [\n            {$match:{\"address\":address}},\n            // {$project:{address:1,height:1,exists:1}},\n            {$sort:{\"height\":-1}},\n            {$limit:(Meteor.settings.public.uptimeWindow-1)},\n            {$unwind: \"$_id\"},\n            {$group:{\n                \"_id\": \"$address\",\n                \"uptime\": {\n                    \"$sum\":{\n                        $cond: [{$eq: ['$exists', true]}, 1, 0]\n                    }\n                }\n            }\n            }];\n        // let result = aggregateQuery(pipeline, { cursor: {} });\n\n        return Promise.await(collection.aggregate(pipeline).toArray());\n        // return .aggregate()\n    },\n    'blocks.getLatestHeight': function() {\n        this.unblock();\n        let url = RPC+'/status';\n        try{\n            let response = HTTP.get(url);\n            let status = JSON.parse(response.content);\n            return (status.result.sync_info.latest_block_height);\n        }\n        catch (e){\n            return 0;\n        }\n    },\n    'blocks.getCurrentHeight': function() {\n        this.unblock();\n        let currHeight = Blockscon.find({},{sort:{height:-1},limit:1}).fetch();\n        // console.log(\"currentHeight:\"+currHeight);\n        if (currHeight && currHeight.length == 1)\n            return currHeight[0].height;\n        else return Meteor.settings.params.startHeight;\n    },\n    'blocks.blocksUpdate': function() {\n        if (SYNCING)\n            return \"Syncing...\";\n        else console.log(\"start to sync\");\n        // Meteor.clearInterval(Meteor.timerHandle);\n        // get the latest height\n        let until = Meteor.call('blocks.getLatestHeight');\n        // console.log(until);\n        // get the current height in db\n        let curr = Meteor.call('blocks.getCurrentHeight');\n        console.log(curr);\n        // loop if there's update in db\n        if (until > curr) {\n            SYNCING = true;\n\n            let validatorSet;\n            // get latest validator candidate information\n            url = LCD+'/staking/validators';\n\n            try{\n                response = HTTP.get(url);\n                validatorSet = JSON.parse(response.content);\n            }\n            catch(e){\n                console.log(e);\n            }\n\n            url = LCD+'/staking/validators?status=unbonding';\n\n            try{\n                response = HTTP.get(url);\n                [...validatorSet] = [...validatorSet, ...JSON.parse(response.content)];\n            }\n            catch(e){\n                console.log(e);\n            }\n\n            url = LCD+'/staking/validators?status=unbonded';\n\n            try{\n                response = HTTP.get(url);\n                [...validatorSet] = [...validatorSet, ...JSON.parse(response.content)];\n            }\n            catch(e){\n                console.log(e);\n            }\n\n            console.log(\"all validators: \"+validatorSet.length);\n\n            for (let height = curr+1 ; height <= until ; height++) {\n                let startBlockTime = new Date();\n                // add timeout here? and outside this loop (for catched up and keep fetching)?\n                this.unblock();\n                let url = RPC+'/block?height=' + height;\n                let analyticsData = {};\n\n                console.log(url);\n                try{\n                    const bulkValidators = Validators.rawCollection().initializeUnorderedBulkOp();\n                    const bulkValidatorRecords = ValidatorRecords.rawCollection().initializeUnorderedBulkOp();\n                    const bulkVPHistory = VotingPowerHistory.rawCollection().initializeUnorderedBulkOp();\n                    const bulkTransations = Transactions.rawCollection().initializeUnorderedBulkOp();\n\n                    let startGetHeightTime = new Date();\n                    let response = HTTP.get(url);\n                    if (response.statusCode == 200){\n                        let block = JSON.parse(response.content);\n                        block = block.result;\n                        // store height, hash, numtransaction and time in db\n                        let blockData = {};\n                        blockData.height = height;\n                        blockData.hash = block.block_meta.block_id.hash;\n                        blockData.transNum = block.block_meta.header.num_txs;\n                        blockData.time = new Date(block.block.header.time);\n                        blockData.lastBlockHash = block.block.header.last_block_id.hash;\n                        blockData.proposerAddress = block.block.header.proposer_address;\n                        blockData.validators = [];\n                        let precommits = block.block.last_commit.precommits;\n                        if (precommits != null){\n                            // console.log(precommits.length);\n                            for (let i=0; i<precommits.length; i++){\n                                if (precommits[i] != null){\n                                    blockData.validators.push(precommits[i].validator_address);\n                                }\n                            }\n\n                            analyticsData.precommits = precommits.length;\n                            // record for analytics\n                            // PrecommitRecords.insert({height:height, precommits:precommits.length});\n                        }\n\n                        // save txs in database\n                        if (block.block.data.txs && block.block.data.txs.length > 0){\n                            for (t in block.block.data.txs){\n                                Meteor.call('Transactions.index', sha256(Buffer.from(block.block.data.txs[t], 'base64')), blockData.time, (err, result) => {\n                                    if (err){\n                                        console.log(err);\n                                    }\n                                });\n                            }\n                        }\n\n                        // save double sign evidences\n                        if (block.block.evidence.evidence){\n                            Evidences.insert({\n                                height: height,\n                                evidence: block.block.evidence.evidence\n                            });\n                        }\n\n                        blockData.precommitsCount = blockData.validators.length;\n\n                        analyticsData.height = height;\n\n                        let endGetHeightTime = new Date();\n                        console.log(\"Get height time: \"+((endGetHeightTime-startGetHeightTime)/1000)+\"seconds.\");\n\n\n                        let startGetValidatorsTime = new Date();\n                        // update chain status\n                        url = RPC+'/validators?height='+height;\n                        response = HTTP.get(url);\n                        console.log(url);\n                        let validators = JSON.parse(response.content);\n                        validators.result.block_height = parseInt(validators.result.block_height);\n                        ValidatorSets.insert(validators.result);\n\n                        blockData.validatorsCount = validators.result.validators.length;\n                        let startBlockInsertTime = new Date();\n                        Blockscon.insert(blockData);\n                        let endBlockInsertTime = new Date();\n                        console.log(\"Block insert time: \"+((endBlockInsertTime-startBlockInsertTime)/1000)+\"seconds.\");\n\n                        // store valdiators exist records\n                        let existingValidators = Validators.find({address:{$exists:true}}).fetch();\n\n                        if (height > 1){\n                            // record precommits and calculate uptime\n                            // only record from block 2\n                            for (i in validators.result.validators){\n                                let address = validators.result.validators[i].address;\n                                let record = {\n                                    height: height,\n                                    address: address,\n                                    exists: false,\n                                    voting_power: parseInt(validators.result.validators[i].voting_power)//getValidatorVotingPower(existingValidators, address)\n                                }\n\n                                for (j in precommits){\n                                    if (precommits[j] != null){\n                                        if (address == precommits[j].validator_address){\n                                            record.exists = true;\n                                            precommits.splice(j,1);\n                                            break;\n                                        }\n                                    }\n                                }\n\n                                // calculate the uptime based on the records stored in previous blocks\n                                // only do this every 15 blocks ~\n\n                                if ((height % 15) == 0){\n                                    // let startAggTime = new Date();\n                                    let numBlocks = Meteor.call('blocks.findUpTime', address);\n                                    let uptime = 0;\n                                    // let endAggTime = new Date();\n                                    // console.log(\"Get aggregated uptime for \"+existingValidators[i].address+\": \"+((endAggTime-startAggTime)/1000)+\"seconds.\");\n                                    if ((numBlocks[0] != null) && (numBlocks[0].uptime != null)){\n                                        uptime = numBlocks[0].uptime;\n                                    }\n\n                                    let base = Meteor.settings.public.uptimeWindow;\n                                    if (height < base){\n                                        base = height;\n                                    }\n\n                                    if (record.exists){\n                                        if (uptime < base){\n                                            uptime++;\n                                        }\n                                        uptime = (uptime / base)*100;\n                                        bulkValidators.find({address:address}).upsert().updateOne({$set:{uptime:uptime, lastSeen:blockData.time}});\n                                    }\n                                    else{\n                                        uptime = (uptime / base)*100;\n                                        bulkValidators.find({address:address}).upsert().updateOne({$set:{uptime:uptime}});\n                                    }\n                                }\n\n                                bulkValidatorRecords.insert(record);\n                                // ValidatorRecords.update({height:height,address:record.address},record);\n                            }\n                        }\n\n                        let chainStatus = Chain.findOne({chainId:block.block_meta.header.chain_id});\n                        let lastSyncedTime = chainStatus?chainStatus.lastSyncedTime:0;\n                        let timeDiff;\n                        let blockTime = Meteor.settings.params.defaultBlockTime;\n                        if (lastSyncedTime){\n                            let dateLatest = blockData.time;\n                            let dateLast = new Date(lastSyncedTime);\n                            timeDiff = Math.abs(dateLatest.getTime() - dateLast.getTime());\n                            //blockTime = (chainStatus.blockTime * (blockData.height - 1) + timeDiff) / blockData.height;\n                            if (timeDiff < chainStatus.blockTime)\n                            {\n\n                                blockTime = timeDiff\n                                \n                            }else{\n                                blockTime = chainStatus.blockTime\n                            }\n                        }\n\n                        let endGetValidatorsTime = new Date();\n                        console.log(\"Get height validators time: \"+((endGetValidatorsTime-startGetValidatorsTime)/1000)+\"seconds.\");\n\n                        Chain.update({chainId:block.block_meta.header.chain_id}, {$set:{lastSyncedTime:blockData.time, blockTime:blockTime}});\n\n                        analyticsData.averageBlockTime = blockTime;\n                        analyticsData.timeDiff = timeDiff;\n\n                        analyticsData.time = blockData.time;\n\n                        // initialize validator data at first block\n                        // if (height == 1){\n                        //     Validators.remove({});\n                        // }\n\n                        analyticsData.voting_power = 0;\n\n                        // validators are all the validators in the current height\n                        console.log(\"validatorSet.length: \"+validatorSet.length);\n                        let startFindValidatorsNameTime = new Date();\n                        if (validators.result){\n                            for (v in validators.result.validators){\n                                // Validators.insert(validators.result.validators[v]);\n                                let validator = validators.result.validators[v];\n                                validator.voting_power = parseInt(validator.voting_power);\n                                validator.proposer_priority = parseInt(validator.proposer_priority);\n\n                                let valExist = Validators.findOne({\"pub_key.value\":validator.pub_key.value});\n                                if (!valExist){\n                                    console.log(\"validator pub_key not in db\");\n                                    // let command = Meteor.settings.bin.gaiadebug+\" pubkey \"+validator.pub_key.value;\n                                    // console.log(command);\n                                    // let tempVal = validator;\n\n                                    validator.address = getAddress(validator.pub_key);\n                                    validator.accpub = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixAccPub);\n                                    validator.operator_pubkey = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixValPub);\n                                    validator.consensus_pubkey = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixConsPub);\n\n                                    for (val in validatorSet){\n                                        if (validatorSet[val].consensus_pubkey == validator.consensus_pubkey){\n                                            validator.operator_address = validatorSet[val].operator_address;\n                                            validator.delegator_address = Meteor.call('getDelegator', validatorSet[val].operator_address);\n                                            validator.jailed = validatorSet[val].jailed;\n                                            validator.status = validatorSet[val].status;\n                                            validator.min_self_delegation = validatorSet[val].min_self_delegation;\n                                            validator.tokens = validatorSet[val].tokens;\n                                            validator.league = validatorSet[val].league;\n                                            validator.delegator_shares = validatorSet[val].delegator_shares;\n                                            validator.description = validatorSet[val].description;\n                                            validator.bond_height = validatorSet[val].bond_height;\n                                            validator.bond_intra_tx_counter = validatorSet[val].bond_intra_tx_counter;\n                                            validator.unbonding_height = validatorSet[val].unbonding_height;\n                                            validator.unbonding_time = validatorSet[val].unbonding_time;\n                                            validator.commission = validatorSet[val].commission;\n                                            validator.self_delegation = validator.delegator_shares;\n                                            // validator.removed = false,\n                                            // validator.removedAt = 0\n                                            // validatorSet.splice(val, 1);\n                                            break;\n                                        }\n                                    }\n\n                                    // bulkValidators.insert(validator);\n                                    bulkValidators.find({consensus_pubkey: validator.consensus_pubkey}).upsert().updateOne({$set:validator});\n                                    // console.log(\"validator first appears: \"+bulkValidators.length);\n                                    bulkVPHistory.insert({\n                                        address: validator.address,\n                                        prev_voting_power: 0,\n                                        voting_power: validator.voting_power,\n                                        type: 'add',\n                                        height: blockData.height,\n                                        block_time: blockData.time\n                                    });\n\n                                \n                                }\n                                else{\n                                    for (val in validatorSet){\n                                        if (validatorSet[val].consensus_pubkey == valExist.consensus_pubkey){\n                                            validator.jailed = validatorSet[val].jailed;\n                                            validator.status = validatorSet[val].status;\n                                            validator.tokens = validatorSet[val].tokens;\n                                            validator.league = validatorSet[val].league;\n                                            validator.delegator_shares = validatorSet[val].delegator_shares;\n                                            validator.description = validatorSet[val].description;\n                                            validator.bond_height = validatorSet[val].bond_height;\n                                            validator.bond_intra_tx_counter = validatorSet[val].bond_intra_tx_counter;\n                                            validator.unbonding_height = validatorSet[val].unbonding_height;\n                                            validator.unbonding_time = validatorSet[val].unbonding_time;\n                                            validator.commission = validatorSet[val].commission;\n\n                                            // calculate self delegation percentage every 30 blocks\n\n                                            if (height % 30 == 1){\n                                                try{\n                                                    let response = HTTP.get(LCD + '/staking/delegators/'+valExist.delegator_address+'/delegations/'+valExist.operator_address);\n\n                                                    if (response.statusCode == 200){\n                                                        let selfDelegation = JSON.parse(response.content);\n                                                        if (selfDelegation.shares){\n                                                            validator.self_delegation = parseFloat(selfDelegation.shares)/parseFloat(validator.delegator_shares);\n                                                        }\n                                                    }\n                                                }\n                                                catch(e){\n                                                    // console.log(e);\n                                                }\n                                            }\n\n\n                                            bulkValidators.find({consensus_pubkey: valExist.consensus_pubkey}).updateOne({$set:validator});\n                                            // console.log(\"validator exisits: \"+bulkValidators.length);\n                                            // validatorSet.splice(val, 1);\n                                            break;\n                                        }\n                                    }\n                                    let prevVotingPower = VotingPowerHistory.findOne({address:validator.address}, {height:-1, limit:1});\n\n                                    if (prevVotingPower){\n                                        if (prevVotingPower.voting_power != validator.voting_power){\n                                            let changeType = (prevVotingPower.voting_power > validator.voting_power)?'down':'up';\n                                            let changeData = {\n                                                address: validator.address,\n                                                prev_voting_power: prevVotingPower.voting_power,\n                                                voting_power: validator.voting_power,\n                                                type: changeType,\n                                                height: blockData.height,\n                                                block_time: blockData.time\n                                            };\n                                            // console.log('voting power changed.');\n                                            // console.log(changeData);\n                                            bulkVPHistory.insert(changeData);\n                                        }\n                                    }\n\n                                }\n\n\n                                // console.log(validator);\n\n                                analyticsData.voting_power += validator.voting_power;\n                            }\n\n                            // if there is validator removed\n\n                            let prevValidators = ValidatorSets.findOne({block_height:height-1});\n\n                            if (prevValidators){\n                                let removedValidators = getRemovedValidators(prevValidators.validators, validators.result.validators);\n\n                                for (r in removedValidators){\n                                    bulkVPHistory.insert({\n                                        address: removedValidators[r].address,\n                                        prev_voting_power: removedValidators[r].voting_power,\n                                        voting_power: 0,\n                                        type: 'remove',\n                                        height: blockData.height,\n                                        block_time: blockData.time\n                                    });\n                                }\n                            }\n\n                        }\n\n                        let endFindValidatorsNameTime = new Date();\n                        console.log(\"Get validators name time: \"+((endFindValidatorsNameTime-startFindValidatorsNameTime)/1000)+\"seconds.\");\n\n                        // record for analytics\n                        let startAnayticsInsertTime = new Date();\n                        Analytics.insert(analyticsData);\n                        let endAnalyticsInsertTime = new Date();\n                        console.log(\"Analytics insert time: \"+((endAnalyticsInsertTime-startAnayticsInsertTime)/1000)+\"seconds.\");\n\n                        let startVUpTime = new Date();\n                        if (bulkValidators.length > 0){\n                            // console.log(bulkValidators.length);\n                            bulkValidators.execute((err, result) => {\n                                if (err){\n                                    console.log(err);\n                                }\n                                if (result){\n                                    // console.log(result);\n                                }\n                            });\n                        }\n\n                        let endVUpTime = new Date();\n                        console.log(\"Validator update time: \"+((endVUpTime-startVUpTime)/1000)+\"seconds.\");\n\n                        let startVRTime = new Date();\n                        if (bulkValidatorRecords.length > 0){\n                            bulkValidatorRecords.execute((err, result) => {\n                                if (err){\n                                    console.log(err);\n                                }\n                            });\n                        }\n\n                        let endVRTime = new Date();\n                        console.log(\"Validator records update time: \"+((endVRTime-startVRTime)/1000)+\"seconds.\");\n\n                        if (bulkVPHistory.length > 0){\n                            bulkVPHistory.execute((err, result) => {\n                                if (err){\n                                    console.log(err);\n                                }\n                            });\n                        }\n\n                        if (bulkTransations.length > 0){\n                            bulkTransations.execute((err, result) => {\n                                if (err){\n                                    console.log(err);\n                                }\n                            });\n                        }\n\n                        // calculate voting power distribution every 60 blocks ~ 5mins\n\n                        if (height % 60 == 1){\n                            console.log(\"===== calculate voting power distribution =====\");\n                            let activeValidators = Validators.find({status:2,jailed:false},{sort:{voting_power:-1}}).fetch();\n                            let numTopTwenty = Math.ceil(activeValidators.length*0.2);\n                            let numBottomEighty = activeValidators.length - numTopTwenty;\n\n                            let topTwentyPower = 0;\n                            let bottomEightyPower = 0;\n\n                            let numTopThirtyFour = 0;\n                            let numBottomSixtySix = 0;\n                            let topThirtyFourPercent = 0;\n                            let bottomSixtySixPercent = 0;\n\n\n\n                            for (v in activeValidators){\n                                if (v < numTopTwenty){\n                                    topTwentyPower += activeValidators[v].voting_power;\n                                }\n                                else{\n                                    bottomEightyPower += activeValidators[v].voting_power;\n                                }\n\n\n                                if (topThirtyFourPercent < 0.34){\n                                    topThirtyFourPercent += activeValidators[v].voting_power / analyticsData.voting_power;\n                                    numTopThirtyFour++;\n                                }\n                            }\n\n                            bottomSixtySixPercent = 1 - topThirtyFourPercent;\n                            numBottomSixtySix = activeValidators.length - numTopThirtyFour;\n\n                            let vpDist = {\n                                height: height,\n                                numTopTwenty: numTopTwenty,\n                                topTwentyPower: topTwentyPower,\n                                numBottomEighty: numBottomEighty,\n                                bottomEightyPower: bottomEightyPower,\n                                numTopThirtyFour: numTopThirtyFour,\n                                topThirtyFourPercent: topThirtyFourPercent,\n                                numBottomSixtySix: numBottomSixtySix,\n                                bottomSixtySixPercent: bottomSixtySixPercent,\n                                numValidators: activeValidators.length,\n                                totalVotingPower: analyticsData.voting_power,\n                                blockTime: blockData.time,\n                                createAt: new Date()\n                            }\n\n                            console.log(vpDist);\n\n                            VPDistributions.insert(vpDist);\n                        }\n                    }\n                }\n                catch (e){\n                    console.log(e);\n                    SYNCING = false;\n                    return \"Stopped\";\n                }\n                let endBlockTime = new Date();\n                console.log(\"This block used: \"+((endBlockTime-startBlockTime)/1000)+\"seconds.\");\n            }\n            SYNCING = false;\n            Chain.update({chainId:Meteor.settings.public.chainId}, {$set:{lastBlocksSyncedTime:new Date(), totalValidators:validatorSet.length}});\n        }\n\n        return until;\n    },\n    'addLimit': function(limit) {\n        // console.log(limit+10)\n        return (limit+10);\n    },\n    'hasMore': function(limit) {\n        if (limit > Meteor.call('getCurrentHeight')) {\n            return (false);\n        } else {\n            return (true);\n        }\n    }\n});","import { Meteor } from 'meteor/meteor';\nimport { Blockscon } from '../blocks.js';\nimport { Validators } from '../../validators/validators.js';\nimport { Transactions } from '../../transactions/transactions.js';\n\npublishComposite('blocks.height', function(limit){\n    return {\n        find(){\n            return Blockscon.find({}, {limit: limit, sort: {height: -1}})\n        },\n        children: [\n            {\n                find(block){\n                    return Validators.find(\n                        {address:block.proposerAddress},\n                        {limit:1}\n                    )\n                }\n            }\n        ]\n    }\n});\n\npublishComposite('blocks.findOne', function(height){\n    return {\n        find(){\n            return Blockscon.find({height:height})\n        },\n        children: [\n            {\n                find(block){\n                    return Transactions.find(\n                        {height:block.height}\n                    )\n                }\n            },\n            {\n                find(block){\n                    return Validators.find(\n                        {address:block.proposerAddress},\n                        {limit:1}\n                    )\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators.js';\n\nexport const Blockscon = new Mongo.Collection('blocks');\n\nBlockscon.helpers({\n    proposer(){\n        return Validators.findOne({address:this.proposerAddress});\n    }\n});\n\n// Blockscon.helpers({\n//     sorted(limit) {\n//         return Blockscon.find({}, {sort: {height:-1}, limit: limit});\n//     }\n// });\n\n\n// Meteor.setInterval(function() {\n//     Meteor.call('blocksUpdate', (error, result) => {\n//         console.log(result);\n//     })\n// }, 30000000);","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { getAddress } from 'tendermint/lib/pubkey.js';\nimport { Chain, ChainStates } from '../chain.js';\nimport { Validators } from '../../validators/validators.js';\nimport { VotingPowerHistory } from '../../voting-power/history.js';\n\nfindVotingPower = (validator, genValidators) => {\n    for (let v in genValidators){\n        if (validator.pub_key.value == genValidators[v].pub_key.value){\n            return parseInt(genValidators[v].power);\n        }\n    }\n}\n\nMeteor.methods({\n    'chain.getConsensusState': function(){\n        this.unblock();\n        let url = RPC+'/dump_consensus_state';\n        try{\n            let response = HTTP.get(url);\n            let consensus = JSON.parse(response.content);\n            consensus = consensus.result;\n            let height = consensus.round_state.height;\n            let round = consensus.round_state.round;\n            let step = consensus.round_state.step;\n            let votedPower = Math.round(parseFloat(consensus.round_state.votes[round].prevotes_bit_array.split(\" \")[3])*100);\n\n            Chain.update({chainId:Meteor.settings.public.chainId}, {$set:{\n                votingHeight: height, \n                votingRound: round, \n                votingStep: step, \n                votedPower: votedPower,\n                proposerAddress: consensus.round_state.validators.proposer.address,\n                prevotes: consensus.round_state.votes[round].prevotes,\n                precommits: consensus.round_state.votes[round].precommits\n            }});\n        }\n        catch(e){\n            console.log(e);\n        }\n    },\n    'chain.updateStatus': function(){\n        this.unblock();\n        let url = RPC+'/status';\n        try{\n            let response = HTTP.get(url);\n            let status = JSON.parse(response.content);\n            status = status.result;\n            let chain = {};\n            chain.chainId = status.node_info.network;\n            chain.latestBlockHeight = status.sync_info.latest_block_height;\n            chain.latestBlockTime = status.sync_info.latest_block_time;\n\n            url = RPC+'/validators';\n            response = HTTP.get(url);\n            let validators = JSON.parse(response.content);\n            validators = validators.result.validators;\n            chain.validators = validators.length;\n            let activeVP = 0;\n            for (v in validators){\n                activeVP += parseInt(validators[v].voting_power);\n            }\n            chain.activeVotingPower = activeVP;\n\n            // Get chain states\n            if (parseInt(chain.latestBlockHeight) > 0){\n                let chainStates = {};\n                chainStates.height = parseInt(status.sync_info.latest_block_height);\n                chainStates.time = new Date(status.sync_info.latest_block_time);\n\n                url = LCD + '/staking/pool';\n                try{\n                    response = HTTP.get(url);\n                    let bonding = JSON.parse(response.content);\n                    // chain.bondedTokens = bonding.bonded_tokens;\n                    // chain.notBondedTokens = bonding.not_bonded_tokens;\n                    chainStates.bondedTokens = parseInt(bonding.bonded_tokens);\n                    chainStates.notBondedTokens = parseInt(bonding.not_bonded_tokens);\n                }\n                catch(e){\n                    console.log(e);\n                }\n\n                url = LCD + '/distribution/community_pool';\n                try {\n                    response = HTTP.get(url);\n                    let pool = JSON.parse(response.content);\n                    if (pool && pool.length > 0){\n                        chainStates.communityPool = [];\n                        pool.forEach((amount, i) => {\n                            chainStates.communityPool.push({\n                                denom: amount.denom,\n                                amount: parseFloat(amount.amount)\n                            })\n                        })\n                    }\n                }\n                catch (e){\n                    console.log(e)\n                }\n\n                url = LCD + '/minting/inflation';\n                try{\n                    response = HTTP.get(url);\n                    let inflation = JSON.parse(response.content);\n                    if (inflation){\n                        chainStates.inflation = parseFloat(inflation)\n                    }\n                }\n                catch(e){\n                    console.log(e);\n                }\n\n                url = LCD + '/minting/deflation';\n                try{\n                    response = HTTP.get(url);\n                    let deflation = JSON.parse(response.content);\n                    if (deflation){\n                        chainStates.deflation = parseFloat(deflation)\n                    }\n                }\n                catch(e){\n                    console.log(e);\n                }\n\n                url = LCD + '/minting/minting-speed';\n                try{\n                    response = HTTP.get(url);\n                    let minting = JSON.parse(response.content);\n                    if (minting){\n                        chainStates.minting = parseFloat(minting)\n                    }\n                }\n                catch(e){\n                    console.log(e);\n                }\n\n                url = LCD + '/minting/annual-provisions';\n                try{\n                    response = HTTP.get(url);\n                    let provisions = JSON.parse(response.content);\n                    if (provisions){\n                        chainStates.annualProvisions = parseFloat(provisions)\n                    }\n                }\n                catch(e){\n                    console.log(e);\n                }\n\n                ChainStates.insert(chainStates);\n            }\n\n            // chain.totalVotingPower = totalVP;\n\n            Chain.update({chainId:chain.chainId}, {$set:chain}, {upsert: true});\n\n            // validators = Validators.find({}).fetch();\n            // console.log(validators);\n            return chain.latestBlockHeight;\n        }\n        catch (e){\n            console.log(e);\n            return \"Error getting chain status.\";\n        }\n    },\n    'chain.getLatestStatus': function(){\n        Chain.find().sort({created:-1}).limit(1);\n    },\n    'chain.genesis': function(){\n        let chain = Chain.findOne({chainId: Meteor.settings.public.chainId});\n        \n        if (chain && chain.readGenesis){\n            console.log('Genesis file has been processed');\n        }\n        else{\n            console.log('=== Start processing genesis file ===');\n\n            let response = HTTP.get(Meteor.settings.genesisFile);\n            let genesis = JSON.parse(response.content);\n            console.log(genesis.result.genesis)\n            genesis = genesis.result.genesis\n            let chainParams = {\n                chainId: genesis.chain_id,\n                genesisTime: genesis.genesis_time,\n                consensusParams: genesis.consensus_params,\n                auth: genesis.app_state.auth,\n                bank: genesis.app_state.bank,\n                staking: {\n                    pool: genesis.app_state.staking.pool,\n                    params: genesis.app_state.staking.params\n                },\n                mint: genesis.app_state.mint,\n                distr: {\n                    communityTax: genesis.app_state.distr.community_tax,\n                    baseProposerReward: genesis.app_state.distr.base_proposer_reward,\n                    bonusProposerReward: genesis.app_state.distr.bonus_proposer_reward,\n                    withdrawAddrEnabled: genesis.app_state.distr.withdraw_addr_enabled\n                },\n                gov: {\n                    startingProposalId: genesis.app_state.gov.starting_proposal_id,\n                    depositParams: genesis.app_state.gov.deposit_params,\n                    votingParams: genesis.app_state.gov.voting_params,\n                    tallyParams: genesis.app_state.gov.tally_params\n                },\n                slashing:{\n                    params: genesis.app_state.slashing.params\n                }\n            }\n\n            let totalVotingPower = 0;\n\n            // read gentx\n            if (genesis.app_state.gentxs && (genesis.app_state.gentxs.length > 0)){\n                for (i in genesis.app_state.gentxs){\n                    let msg = genesis.app_state.gentxs[i].value.msg;\n                    // console.log(msg.type);\n                    for (m in msg){\n                        if (msg[m].type == \"cosmos-sdk/MsgCreateValidator\"){\n                            console.log(msg[m].value);\n                            // let command = Meteor.settings.bin.gaiadebug+\" pubkey \"+msg[m].value.pubkey;\n                            let validator = {\n                                consensus_pubkey: msg[m].value.pubkey,\n                                description: msg[m].value.description,\n                                commission: msg[m].value.commission,\n                                min_self_delegation: msg[m].value.min_self_delegation,\n                                operator_address: msg[m].value.validator_address,\n                                delegator_address: msg[m].value.delegator_address,\n                                voting_power: Math.floor(parseInt(msg[m].value.value.amount) / Meteor.settings.public.stakingFraction),\n                                jailed: false,\n                                status: 2\n                            }\n\n                            totalVotingPower += validator.voting_power;\n\n                            let pubkeyValue = Meteor.call('bech32ToPubkey', msg[m].value.pubkey);\n                            // Validators.upsert({consensus_pubkey:msg[m].value.pubkey},validator);\n                            \n                            validator.pub_key = {\n                                \"type\":\"tendermint/PubKeyEd25519\",\n                                \"value\":pubkeyValue\n                            }\n\n                            validator.address = getAddress(validator.pub_key);\n                            validator.accpub = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixAccPub);\n                            validator.operator_pubkey = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixValPub);\n                            VotingPowerHistory.insert({\n                                address: validator.address,\n                                prev_voting_power: 0,\n                                voting_power: validator.voting_power,\n                                type: 'add',\n                                height: 0,\n                                block_time: genesis.genesis_time\n                            });\n\n                            Validators.insert(validator);\n                        }\n                    }\n                }\n            }\n\n            // read validators from previous chain\n            console.log('read validators from previous chain');\n            if (genesis.app_state.staking.validators && genesis.app_state.staking.validators.length > 0){\n                console.log(genesis.app_state.staking.validators.length);\n                let genValidatorsSet = genesis.app_state.staking.validators;\n                let genValidators = genesis.validators;\n                for (let v in genValidatorsSet){\n                    // console.log(genValidators[v]);\n                    let validator = genValidatorsSet[v];\n                    validator.delegator_address = Meteor.call('getDelegator', genValidatorsSet[v].operator_address);\n\n                    let pubkeyValue = Meteor.call('bech32ToPubkey', validator.consensus_pubkey);\n                            \n                    validator.pub_key = {\n                        \"type\":\"tendermint/PubKeyEd25519\",\n                        \"value\":pubkeyValue\n                    }\n\n                    validator.address = getAddress(validator.pub_key);\n                    validator.pub_key = validator.pub_key;\n                    validator.accpub = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixAccPub);\n                    validator.operator_pubkey = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixValPub);\n\n                    validator.voting_power = findVotingPower(validator, genValidators);\n                    totalVotingPower += validator.voting_power;\n\n                    Validators.upsert({consensus_pubkey:validator.consensus_pubkey},validator);\n                    VotingPowerHistory.insert({\n                        address: validator.address,\n                        prev_voting_power: 0,\n                        voting_power: validator.voting_power,\n                        type: 'add',\n                        height: 0,\n                        block_time: genesis.genesis_time\n                    });\n                }\n            }\n                \n            chainParams.readGenesis = true;\n            chainParams.activeVotingPower = totalVotingPower;\n            let result = Chain.upsert({chainId:chainParams.chainId}, {$set:chainParams});\n\n\n            console.log('=== Finished processing genesis file ===');\n\n        }\n        \n        return true;\n    }\n})","import { Meteor } from 'meteor/meteor';\nimport { Chain, ChainStates } from '../chain.js';\nimport { CoinStats } from '../../coin-stats/coin-stats.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.publish('chainStates.latest', function () {\n    return [\n        ChainStates.find({},{sort:{height:-1},limit:1}),\n        CoinStats.find({},{sort:{last_updated_at:-1},limit:1})\n    ];\n});\n\npublishComposite('chain.status', function(){\n    return {\n        find(){\n            return Chain.find({chainId:Meteor.settings.public.chainId});\n        },\n        children: [\n            {\n                find(chain){\n                    return Validators.find(\n                        {},\n                        {fields:{address:1, description:1}}\n                    )\n                }\n            }\n        ]\n    }\n});","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators.js';\n\nexport const Chain = new Mongo.Collection('chain');\nexport const ChainStates = new Mongo.Collection('chain_states')\n\nChain.helpers({\n    proposer(){\n        return Validators.findOne({address:this.proposerAddress});\n    }\n})","import { Meteor } from 'meteor/meteor';\nimport { CoinStats } from '../coin-stats.js';\nimport { HTTP } from 'meteor/http';\n\nMeteor.methods({\n    'coinStats.getCoinStats': function(){\n        this.unblock();\n        let coinId = Meteor.settings.public.coingeckoId;\n        if (coinId){\n            try{\n                let now = new Date();\n                now.setMinutes(0);\n                let url = \"https://api.coingecko.com/api/v3/simple/price?ids=\"+coinId+\"&vs_currencies=usd&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true&include_last_updated_at=true\";\n                let response = HTTP.get(url);\n                if (response.statusCode == 200){\n                    // console.log(JSON.parse(response.content));\n                    let data = JSON.parse(response.content);\n                    data = data[coinId];\n                    // console.log(coinStats);\n                    return CoinStats.insert(data);\n                }\n            }\n            catch(e){\n                console.log(e);\n            }\n        }\n        else{\n            return \"No coingecko Id provided.\"\n        }\n    },\n    'coinStats.getStats': function(){\n        this.unblock();\n        let coinId = Meteor.settings.public.coingeckoId;\n        if (coinId){\n            return (CoinStats.findOne({},{sort:{last_updated_at:-1}}));\n        }\n        else{\n            return \"No coingecko Id provided.\";\n        }\n\n    }\n})","import { Mongo } from 'meteor/mongo';\n\nexport const CoinStats = new Mongo.Collection('coin_stats');\n","import { Meteor } from 'meteor/meteor';\nimport { Delegations } from '../delegations.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.methods({\n    'delegations.getDelegations': function(){\n        this.unblock();\n        let validators = Validators.find({}).fetch();\n        let delegations = [];\n        console.log(\"=== Getting delegations ===\");\n        for (v in validators){\n            if (validators[v].operator_address){\n                let url = LCD + '/staking/validators/'+validators[v].operator_address+\"/delegations\";\n                try{\n                    let response = HTTP.get(url);\n                    if (response.statusCode == 200){\n                        let delegation = JSON.parse(response.content);\n                        // console.log(delegation);\n                        delegations = delegations.concat(delegation);\n                    }\n                    else{\n                        console.log(response.statusCode);\n                    }\n                }\n                catch (e){\n                    console.log(e);\n                }    \n            }\n        }\n\n        for (i in delegations){\n            if (delegations[i] && delegations[i].shares)\n                delegations[i].shares = parseFloat(delegations[i].shares);\n        }\n\n        // console.log(delegations);\n        let data = {\n            delegations: delegations,\n            createdAt: new Date(),\n        }\n\n        return Delegations.insert(data);\n    }\n    // 'blocks.averageBlockTime'(address){\n    //     let blocks = Blockscon.find({proposerAddress:address}).fetch();\n    //     let heights = blocks.map((block, i) => {\n    //         return block.height;\n    //     });\n    //     let blocksStats = Analytics.find({height:{$in:heights}}).fetch();\n    //     // console.log(blocksStats);\n\n    //     let totalBlockDiff = 0;\n    //     for (b in blocksStats){\n    //         totalBlockDiff += blocksStats[b].timeDiff;\n    //     }\n    //     return totalBlockDiff/heights.length;\n    // }\n})","import { Mongo } from 'meteor/mongo';\n\nexport const Delegations = new Mongo.Collection('delegations');\n","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { FundingCycless } from '../fundingcycles.js';\n\nMeteor.methods({\n    'FundingCycles.getFundingCycles': function(){\n        this.unblock();\n        try{\n            let url = LCD + '/gov/fundingcycles';\n            let response = HTTP.get(url);\n            let FundingCycles = JSON.parse(response.content);\n\n            // console.log(FundingCycles);\n\n            let FundingCycleIds = [];\n            if (FundingCycles.length > 0){\n                // FundingCycles.upsert()\n                const bulkFundingCycles = FundingCycless.rawCollection().initializeUnorderedBulkOp();\n                for (let i in FundingCycles){\n                    let FundingCycle = FundingCycles[i];\n                    FundingCycle.cycleId = parseInt(FundingCycle.cycle_id);\n                    if (FundingCycle.cycleId >= 0){\n                        try{\n                            let url = LCD + '/gov/fundingcycles/'+FundingCycle.cycleId;\n                            let response = HTTP.get(url);\n                            if (response.statusCode == 200){\n                                let proposer = JSON.parse(response.content);\n                                if (proposer.cycle_id && (proposer.cycle_id == FundingCycle.cycle_id)){\n                                    FundingCycle.proposer = proposer.proposer;\n                                }\n                            }\n                            bulkFundingCycles.find({cycleId: FundingCycle.cycleId}).upsert().updateOne({$set:FundingCycle});\n                            FundingCycleIds.push(FundingCycle.cycleId);\n                        }\n                        catch(e){\n                            bulkFundingCycles.find({cycleId: FundingCycle.cycleId}).upsert().updateOne({$set:FundingCycle});\n                            FundingCycleIds.push(FundingCycle.cycleId);\n                            console.log(e.response.content);\n                        }\n                    }\n                }\n                // bulkFundingCycles.find({cycleId:{$nin:FundingCycleIds}}).update({$set:{\"value.proposal_status\":\"Removed\"}});\n                bulkFundingCycles.execute();\n            }\n        }\n        catch (e){\n            console.log(e);\n        }\n    },\n})","import { Meteor } from 'meteor/meteor';\nimport { FundingCycless } from '../fundingcycles.js';\nimport { check } from 'meteor/check'\n\nMeteor.publish('fundingcycles.list', function () {\n    return FundingCycless.find({}, {sort:{cycleId:-1}});\n});\n\nMeteor.publish('fundingcycles.one', function (id){\n    check(id, Number);\n    return FundingCycless.find({cycleId:id});\n})","import { Mongo } from 'meteor/mongo';\n\nexport const FundingCycless = new Mongo.Collection('fundingcycles');\n","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Proposals } from '../proposals.js';\nimport { Validators } from '../../validators/validators.js';\n// import { Promise } from 'meteor/promise';\n\nMeteor.methods({\n    'proposals.getProposals': function(){\n        this.unblock();\n        try{\n            let url = LCD + '/gov/proposals';\n            let response = HTTP.get(url);\n            let proposals = JSON.parse(response.content);\n\n            // console.log(proposals);\n\n            let proposalIds = [];\n            if (proposals.length > 0){\n                // Proposals.upsert()\n                const bulkProposals = Proposals.rawCollection().initializeUnorderedBulkOp();\n                for (let i in proposals){\n                    let proposal = proposals[i];\n                    proposal.proposalId = parseInt(proposal.proposal_id);\n                    if (proposal.proposalId > 0){\n                        try{\n                            let url = LCD + '/gov/proposals/'+proposal.proposalId+'/proposer';\n                            let response = HTTP.get(url);\n                            if (response.statusCode == 200){\n                                let proposer = JSON.parse(response.content);\n                                if (proposer.proposal_id && (proposer.proposal_id == proposal.proposal_id)){\n                                    proposal.proposer = proposer.proposer;\n                                }\n                            }\n                            bulkProposals.find({proposalId: proposal.proposalId}).upsert().updateOne({$set:proposal});\n                            proposalIds.push(proposal.proposalId);\n                        }\n                        catch(e){\n                            bulkProposals.find({proposalId: proposal.proposalId}).upsert().updateOne({$set:proposal});\n                            proposalIds.push(proposal.proposalId);\n                            console.log(e.response.content);\n                        }\n                    }\n                }\n                bulkProposals.find({proposalId:{$nin:proposalIds}}).update({$set:{\"value.proposal_status\":\"Removed\"}});\n                bulkProposals.execute();\n            }\n        }\n        catch (e){\n            console.log(e);\n        }\n    },\n    'proposals.getProposalResults': function(){\n        this.unblock();\n        let proposals = Proposals.find({\"proposal_status\":{$in:[\"Passed\", \"Rejected\", \"Removed\",\"VotingPeriod\"]}}).fetch();\n\n        if (proposals && (proposals.length > 0)){\n            for (let i in proposals){\n                if (parseInt(proposals[i].proposalId) > 0){\n                    try{\n                        // get proposal deposits\n                        let url = LCD + '/gov/proposals/'+proposals[i].proposalId+'/deposits';\n                        let response = HTTP.get(url);\n                        let proposal = {proposalId: proposals[i].proposalId};\n                        if (response.statusCode == 200){\n                            let deposits = JSON.parse(response.content);\n                            proposal.deposits = deposits;\n                        }\n\n                        url = LCD + '/gov/proposals/'+proposals[i].proposalId+'/votes';\n                        response = HTTP.get(url);\n                        if (response.statusCode == 200){\n                            let votes = JSON.parse(response.content);\n                            proposal.votes = getVoteDetail(votes);\n                        }\n\n                        url = LCD + '/gov/proposals/'+proposals[i].proposalId+'/tally';\n                        response = HTTP.get(url);\n                        if (response.statusCode == 200){\n                            let tally = JSON.parse(response.content);\n                            proposal.tally = tally;\n                        }\n\n                        proposal.updatedAt = new Date();\n                        Proposals.update({proposalId: proposals[i].proposalId}, {$set:proposal});\n                    }\n                    catch(e){\n\n                    }\n                }\n            }\n        }\n    }\n})\n\nconst getVoteDetail = (votes) => {\n    if (!votes) {\n        return [];\n    }\n\n    let voters = votes.map((vote) => vote.voter);\n    let votingPowerMap = {};\n    let validatorAddressMap = {};\n    Validators.find({delegator_address: {$in: voters}}).forEach((validator) => {\n        votingPowerMap[validator.delegator_address] = {\n            moniker: validator.description.moniker,\n            address: validator.address,\n            tokens: parseFloat(validator.tokens),\n            delegatorShares: parseFloat(validator.delegator_shares),\n            deductedShares: parseFloat(validator.delegator_shares)\n        }\n        validatorAddressMap[validator.operator_address] = validator.delegator_address;\n    });\n    voters.forEach((voter) => {\n        if (!votingPowerMap[voter]) {\n            // voter is not a validator\n            let url = `${LCD}/staking/delegators/${voter}/delegations`;\n            let delegations;\n            let votingPower = 0;\n            try{\n                let response = HTTP.get(url);\n                if (response.statusCode == 200){\n                    delegations = JSON.parse(response.content);\n                    if (delegations) {\n                        delegations.forEach((delegation) => {\n                            let shares = parseFloat(delegation.shares);\n                            if (validatorAddressMap[delegation.validator_address]) {\n                                // deduct delegated shareds from validator if a delegator votes\n                                let validator = votingPowerMap[validatorAddressMap[delegation.validator_address]];\n                                validator.deductedShares -= shares;\n                                if (validator.delegator_shares != 0){ // avoiding division by zero\n                                    votingPower += (shares/validator.delegatorShares) * validator.tokens;\n                                }\n\n                            } else {\n                                let validator = Validators.findOne({operator_address: delegation.validator_address});\n                                if (validator && validator.delegator_shares != 0){ // avoiding division by zero\n                                    votingPower += (shares/parseFloat(validator.delegator_shares)) * parseFloat(validator.tokens);\n                                }\n                            }\n                        });\n                    }\n                }\n            }\n            catch (e){\n                console.log(e);\n            }\n            votingPowerMap[voter] = {votingPower: votingPower};\n        }\n    });\n    return votes.map((vote) => {\n        let voter = votingPowerMap[vote.voter];\n        let votingPower = voter.votingPower;\n        if (votingPower == undefined) {\n            // voter is a validator\n            votingPower = voter.delegatorShares?((voter.deductedShares/voter.delegatorShares) * voter.tokens):0;\n        }\n        return {...vote, votingPower};\n    });\n}","import { Meteor } from 'meteor/meteor';\nimport { Proposals } from '../proposals.js';\nimport { check } from 'meteor/check'\n\nMeteor.publish('proposals.list', function () {\n    return Proposals.find({}, {sort:{proposalId:-1}});\n});\n\nMeteor.publish('proposals.one', function (id){\n    check(id, Number);\n    return Proposals.find({proposalId:id});\n})","import { Mongo } from 'meteor/mongo';\n\nexport const Proposals = new Mongo.Collection('proposals');\n","import { Meteor } from 'meteor/meteor';\nimport { ValidatorRecords, Analytics, AverageData, AverageValidatorData } from '../records.js';\nimport { Validators } from '../../validators/validators.js';\nimport { Status } from '../../status/status.js';\nimport { MissedBlocksStats } from '../records.js';\nimport { Blockscon } from '../../blocks/blocks.js';\nimport { Chain } from '../../chain/chain.js';\n\nMeteor.methods({\n    'ValidatorRecords.missedBlocksCount': function(address){\n        this.unblock();\n        return ValidatorRecords.find({address:address}).count();\n    },\n    'ValidatorRecords.calculateMissedBlocks': function(){\n        // console.log(\"ValidatorRecords.calculateMissedBlocks: \"+COUNTMISSEDBLOCKS);\n        if (!COUNTMISSEDBLOCKS){\n            COUNTMISSEDBLOCKS = true;\n            console.log('calulate missed blocks count');\n            this.unblock();\n            let validators = Validators.find({}).fetch();\n            let latestHeight = Meteor.call('blocks.getCurrentHeight');\n            let explorerStatus = Status.findOne({chainId: Meteor.settings.public.chainId});\n            let startHeight = (explorerStatus&&explorerStatus.lastMissedBlockHeight)?explorerStatus.lastMissedBlockHeight:Meteor.settings.params.startHeight;\n            // console.log(latestHeight);\n            // console.log(startHeight);\n            const bulkMissedStats = MissedBlocksStats.rawCollection().initializeUnorderedBulkOp();\n            for (i in validators){\n                // if ((validators[i].address == \"B8552EAC0D123A6BF609123047A5181D45EE90B5\") || (validators[i].address == \"69D99B2C66043ACBEAA8447525C356AFC6408E0C\") || (validators[i].address == \"35AD7A2CD2FC71711A675830EC1158082273D457\")){\n                let voterAddress = validators[i].address;\n                let missedRecords = ValidatorRecords.find({\n                    address:voterAddress, \n                    exists:false, \n                    $and: [ { height: { $gt: startHeight } }, { height: { $lte: latestHeight } } ] \n                }).fetch();\n\n                let counts = {};\n\n                // console.log(\"missedRecords to process: \"+missedRecords.length);\n                for (b in missedRecords){\n                    let block = Blockscon.findOne({height:missedRecords[b].height});\n                    let existingRecord = MissedBlocksStats.findOne({voter:voterAddress, proposer:block.proposerAddress});\n\n                    if (typeof counts[block.proposerAddress] === 'undefined'){\n                        if (existingRecord){\n                            counts[block.proposerAddress] = existingRecord.count+1;\n                        }\n                        else{\n                            counts[block.proposerAddress] = 1;\n                        }\n                    }\n                    else{\n                        counts[block.proposerAddress]++;\n                    }\n                }\n\n                for (address in counts){\n                    let data = {\n                        voter: voterAddress,\n                        proposer:address,\n                        count: counts[address]\n                    }\n\n                    bulkMissedStats.find({voter:voterAddress, proposer:address}).upsert().updateOne({$set:data});\n                }\n                // }\n\n            }\n\n            if (bulkMissedStats.length > 0){\n                bulkMissedStats.execute(Meteor.bindEnvironment((err, result) => {\n                    if (err){\n                        COUNTMISSEDBLOCKS = false;\n                        console.log(err);\n                    }\n                    if (result){\n                        Status.upsert({chainId: Meteor.settings.public.chainId}, {$set:{lastMissedBlockHeight:latestHeight, lastMissedBlockTime: new Date()}});\n                        COUNTMISSEDBLOCKS = false;\n                        console.log(\"done\");\n                    }\n                }));\n            }\n            else{\n                COUNTMISSEDBLOCKS = false;\n            }\n            \n            return true;\n        }\n        else{\n            return \"updating...\";\n        }\n    },\n    'Analytics.aggregateBlockTimeAndVotingPower': function(time){\n        this.unblock();\n        let now = new Date();\n        \n        if (time == 'm'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n    \n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;\n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastMinuteVotingPower:averageVotingPower, lastMinuteBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n        if (time == 'h'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 60*60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;    \n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastHourVotingPower:averageVotingPower, lastHourBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n\n        if (time == 'd'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 24*60*60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;    \n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastDayVotingPower:averageVotingPower, lastDayBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n\n        // return analytics.length;\n    },\n    'Analytics.aggregateValidatorDailyBlockTime': function(){\n        this.unblock();\n        let validators = Validators.find({}).fetch();\n        let now = new Date();\n        for (i in validators){\n            let averageBlockTime = 0;\n\n            let blocks = Blockscon.find({proposerAddress:validators[i].address, \"time\": { $gt: new Date(Date.now() - 24*60*60 * 1000) }}, {fields:{height:1}}).fetch();\n            // console.log(blocks);\n\n            if (blocks.length > 0){\n                let blockHeights = [];\n                for (b in blocks){\n                    blockHeights.push(blocks[b].height);\n                }\n    \n                // console.log(blockHeights);\n                let analytics = Analytics.find({height: {$in:blockHeights}}, {fields:{height:1,timeDiff:1}}).fetch();\n                // console.log(analytics);\n    \n                \n                for (a in analytics){\n                    averageBlockTime += analytics[a].timeDiff;\n                }\n\n                averageBlockTime = averageBlockTime / analytics.length;\n            }\n\n            AverageValidatorData.insert({\n                proposerAddress: validators[i].address,\n                averageBlockTime: averageBlockTime,\n                type: 'ValidatorDailyAverageBlockTime',\n                createdAt: now\n            })\n        }\n\n        return true;\n    }\n})\n","import { Meteor } from 'meteor/meteor';\nimport { ValidatorRecords, Analytics, MissedBlocksStats, VPDistributions } from '../records.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.publish('validator_records.all', function () {\n    return ValidatorRecords.find();\n});\n\nMeteor.publish('validator_records.uptime', function(address, num){\n    return ValidatorRecords.find({address:address},{limit:num, sort:{height:-1}});\n});\n\nMeteor.publish('analytics.history', function(){\n    return Analytics.find({},{sort:{height:-1},limit:50});\n});\n\nMeteor.publish('vpDistribution.latest', function(){\n    return VPDistributions.find({},{sort:{height:-1}, limit:1});\n});\n\npublishComposite('missedblocks.validator', function(address, type){\n    let conditions = {};\n    if (type == 'voter'){\n        conditions = {\n            voter: address\n        }\n    }\n    else{\n        conditions = {\n            proposer: address\n        }\n    }\n    return {\n        find(){\n            return MissedBlocksStats.find(conditions)\n        },\n        children: [\n            {\n                find(stats){\n                    return Validators.find(\n                        {},\n                        {fields:{address:1, description:1}}\n                    )\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators';\n\nexport const ValidatorRecords = new Mongo.Collection('validator_records');\nexport const Analytics = new Mongo.Collection('analytics');\nexport const MissedBlocksStats = new Mongo.Collection('missed_blocks_stats');\nexport const VPDistributions = new Mongo.Collection('voting_power_distributions');\nexport const AverageData = new Mongo.Collection('average_data');\nexport const AverageValidatorData = new Mongo.Collection('average_validator_data');\n\nMissedBlocksStats.helpers({\n    proposerMoniker(){\n        let validator = Validators.findOne({address:this.proposer});\n        return (validator.description)?validator.description.moniker:this.proposer;\n    },\n    voterMoniker(){\n        let validator = Validators.findOne({address:this.voter});\n        return (validator.description)?validator.description.moniker:this.voter;\n    }\n})\n","import { Meteor } from 'meteor/meteor';\nimport { Status } from '../status.js';\nimport { check } from 'meteor/check'\n\nMeteor.publish('status.status', function () {\n    return Status.find({chainId:Meteor.settings.public.chainId});\n});\n\n","import { Mongo } from 'meteor/mongo';\n\nexport const Status = new Mongo.Collection('status');","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Validators } from '../../validators/validators.js';\nimport { VotingPowerHistory } from '../../voting-power/history.js';\n\nMeteor.methods({\n    'Transactions.index': function(hash, blockTime){\n        this.unblock();\n        hash = hash.toUpperCase();\n        let url = LCD+ '/txs/'+hash;\n        let response = HTTP.get(url);\n        let tx = JSON.parse(response.content);\n\n        console.log(hash);\n\n        tx.height = parseInt(tx.height);\n\n        let txId = Transactions.insert(tx);\n        if (txId){\n            return txId;\n        }\n        else return false;\n    },\n    'Transactions.findDelegation': function(address, height){\n        return Transactions.find({\n            $or: [{$and: [\n                {\"tags.key\": \"action\"}, \n                {\"tags.value\": \"delegate\"}, \n                {\"tags.key\": \"destination-validator\"}, \n                {\"tags.value\": address}\n            ]}, {$and:[\n                {\"tags.key\": \"action\"}, \n                {\"tags.value\": \"unjail\"}, \n                {\"tags.key\": \"validator\"}, \n                {\"tags.value\": address}\n            ]}, {$and:[\n                {\"tags.key\": \"action\"}, \n                {\"tags.value\": \"create_validator\"}, \n                {\"tags.key\": \"destination-validator\"}, \n                {\"tags.value\": address}\n            ]}, {$and:[\n                {\"tags.key\": \"action\"}, \n                {\"tags.value\": \"begin_unbonding\"}, \n                {\"tags.key\": \"source-validator\"}, \n                {\"tags.value\": address}\n            ]}, {$and:[\n                {\"tags.key\": \"action\"}, \n                {\"tags.value\": \"begin_redelegate\"}, \n                {\"tags.key\": \"destination-validator\"}, \n                {\"tags.value\": address}\n            ]}], \n            \"code\": {$exists: false}, \n            height:{$lt:height}},\n        {sort:{height:-1},\n            limit: 1}\n        ).fetch();\n    },\n    'Transactions.findUser': function(address){\n        // address is either delegator address or validator operator address\n        let validator;\n        if (address.includes(Meteor.settings.public.bech32PrefixValAddr)){\n            // validator operator address\n            validator = Validators.findOne({operator_address:address}, {fields:{address:1, description:1, operator_address:1, delegator_address:1}});\n        }\n        else if (address.includes(Meteor.settings.public.bech32PrefixAccAddr)){\n            // delegator address\n            validator = Validators.findOne({delegator_address:address}, {fields:{address:1, description:1, operator_address:1, delegator_address:1}});        \n        }\n\n        if (validator){\n            return validator;\n        }\n        return false;\n\n    }\n});","import { Meteor } from 'meteor/meteor';\nimport { Transactions } from '../transactions.js';\nimport { Blockscon } from '../../blocks/blocks.js';\n\n\npublishComposite('transactions.list', function(limit = 30){\n    return {\n        find(){\n            return Transactions.find({},{sort:{height:-1}, limit:limit})\n        },\n        children: [\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]\n    }\n});\n\npublishComposite('transactions.validator', function(validatorAddress, delegatorAddress, limit=100){\n    let query = {};\n    if (validatorAddress && delegatorAddress){\n        query = {$or:[{\"tags.value\":validatorAddress}, {\"tags.value\":delegatorAddress}]}\n    }\n\n    if (!validatorAddress && delegatorAddress){\n        query = {\"tags.value\":delegatorAddress}\n    }\n\n    return {\n        find(){\n            return Transactions.find(query, {sort:{height:-1}, limit:limit})\n        },\n        children:[\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]\n    }\n})\n\npublishComposite('transactions.findOne', function(hash){\n    return {\n        find(){\n            return Transactions.find({txhash:hash})\n        },\n        children: [\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]        \n    }\n})\n\npublishComposite('transactions.height', function(height){\n    return {\n        find(){\n            return Transactions.find({height:height})\n        },\n        children: [\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]        \n    }\n})","import { Mongo } from 'meteor/mongo';\nimport { Blockscon } from '../blocks/blocks.js';\nimport { TxIcon } from '../../ui/components/Icons.jsx';\n\nexport const Transactions = new Mongo.Collection('transactions');\n\nTransactions.helpers({\n    block(){\n        return Blockscon.findOne({height:this.height});\n    }\n})","import { Meteor } from 'meteor/meteor';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Blockscon } from '../../blocks/blocks.js';\nimport { Delegations } from '../../delegations/delegations.js';\n\nMeteor.methods({\n    'Validators.findCreateValidatorTime': function(address){\n        // look up the create validator time to consider if the validator has never updated the commission\n        let tx = Transactions.findOne({$and:[\n            {\"tx.value.msg.value.delegator_address\":address},\n            {\"tx.value.msg.type\":\"cosmos-sdk/MsgCreateValidator\"},\n            {code:{$exists:false}}\n        ]});\n\n        if (tx){\n            let block = Blockscon.findOne({height:tx.height});\n            if (block){\n                return block.time;\n            }\n        }\n        else{\n            // no such create validator tx\n            return false;\n        }\n    },\n    // async 'Validators.getAllDelegations'(address){\n    'Validators.getAllDelegations'(address){\n        let url = LCD + '/staking/validators/'+address+'/delegations';\n        \n        try{\n            let delegations = HTTP.get(url);\n            if (delegations.statusCode == 200){\n                delegations = JSON.parse(delegations.content);\n                delegations.forEach((delegation, i) => {\n                    if (delegations[i] && delegations[i].shares)\n                        delegations[i].shares = parseFloat(delegations[i].shares);\n                })\n                \n                return delegations;\n            };\n        }\n        catch (e){\n            console.log(e);\n        }\n    }\n});","import { Meteor } from 'meteor/meteor';\nimport { Validators } from '../validators.js';\nimport { ValidatorRecords } from '../../records/records.js';\nimport { VotingPowerHistory } from '../../voting-power/history.js';\n\nMeteor.publish('validators.all', function (sort = \"description.moniker\", direction = -1) {\n    return Validators.find({});\n});\n\npublishComposite('validators.firstSeen',{\n    find() {\n        return Validators.find({});\n    },\n    children: [\n        {\n            find(val) {\n                return ValidatorRecords.find(\n                    { address: val.address },\n                    { sort: {height: 1}, limit: 1}\n                );\n            }\n        }\n    ]\n});\n\nMeteor.publish('validators.voting_power', function(){\n    return Validators.find({\n        status: 2,\n        jailed:false\n    },{\n        sort:{\n            voting_power:-1\n        },\n        fields:{\n            address: 1,\n            description:1,\n            voting_power:1\n        }\n    }\n    );\n});\n\npublishComposite('validator.details', function(address){\n    let options = {address:address};\n    if (address.indexOf(Meteor.settings.public.bech32PrefixValAddr) != -1){\n        options = {operator_address:address}\n    }\n    return {\n        find(){\n            return Validators.find(options)\n        },\n        children: [\n            {\n                find(val){\n                    return VotingPowerHistory.find(\n                        {address:val.address},\n                        {sort:{height:-1}, limit:50}\n                    )\n                }\n            },\n            {\n                find(val) {\n                    return ValidatorRecords.find(\n                        { address: val.address },\n                        { sort: {height: -1}, limit: Meteor.settings.public.uptimeWindow}\n                    );\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { ValidatorRecords } from '../records/records.js';\nimport { VotingPowerHistory } from '../voting-power/history.js';\n\nexport const Validators = new Mongo.Collection('validators');\n\nValidators.helpers({\n    firstSeen(){\n        return ValidatorRecords.findOne({address:this.address});\n    },\n    history(){\n        return VotingPowerHistory.find({address:this.address}, {sort:{height:-1}, limit:50}).fetch();\n    }\n})\n// Validators.helpers({\n//     uptime(){\n//         // console.log(this.address);\n//         let lastHundred = ValidatorRecords.find({address:this.address}, {sort:{height:-1}, limit:100}).fetch();\n//         console.log(lastHundred);\n//         let uptime = 0;\n//         for (i in lastHundred){\n//             if (lastHundred[i].exists){\n//                 uptime+=1;\n//             }\n//         }\n//         return uptime;\n//     }\n// })","import { Mongo } from 'meteor/mongo';\n\nexport const VotingPowerHistory = new Mongo.Collection('voting_power_history');\n","import { Mongo } from 'meteor/mongo';\n\nexport const Evidences = new Mongo.Collection('evidences');\n","import { Mongo } from 'meteor/mongo';\n\nexport const ValidatorSets = new Mongo.Collection('validator_sets');\n","// Import modules used by both client and server through a single index entry point\n// e.g. useraccounts configuration file.\n","import { Blockscon } from '../../api/blocks/blocks.js';\nimport { Proposals } from '../../api/proposals/proposals.js';\nimport { FundingCycless } from '../../api/fundingcycles/fundingcycles.js';\nimport { ValidatorRecords, Analytics, MissedBlocksStats, AverageData, AverageValidatorData } from '../../api/records/records.js';\n// import { Status } from '../../api/status/status.js';\nimport { Transactions } from '../../api/transactions/transactions.js';\nimport { ValidatorSets } from '../../api/validator-sets/validator-sets.js';\nimport { Validators } from '../../api/validators/validators.js';\nimport { VotingPowerHistory } from '../../api/voting-power/history.js';\nimport { Evidences } from '../../api/evidences/evidences.js';\nimport { CoinStats } from '../../api/coin-stats/coin-stats.js';\nimport { ChainStates } from '../../api/chain/chain.js';\n\nChainStates.rawCollection().createIndex({height: -1},{unique:true});\n\nBlockscon.rawCollection().createIndex({height: -1},{unique:true});\nBlockscon.rawCollection().createIndex({proposerAddress:1});\n\nEvidences.rawCollection().createIndex({height: -1});\n\nProposals.rawCollection().createIndex({proposalId: 1}, {unique:true});\n\nFundingCycless.rawCollection().createIndex({cycleId: 1}, {unique:true});\n\nValidatorRecords.rawCollection().createIndex({address:1,height: -1}, {unique:1});\n\nAnalytics.rawCollection().createIndex({height: -1}, {unique:true})\n\nMissedBlocksStats.rawCollection().createIndex({proposer:1});\nMissedBlocksStats.rawCollection().createIndex({voter:1});\nMissedBlocksStats.rawCollection().createIndex({proposer:1, voter:1},{unique:true});\n\nAverageData.rawCollection().createIndex({type:1, createdAt:-1},{unique:true});\nAverageValidatorData.rawCollection().createIndex({proposerAddress:1,createdAt:-1},{unique:true});\n// Status.rawCollection.createIndex({})\n\nTransactions.rawCollection().createIndex({txhash:1},{unique:true});\nTransactions.rawCollection().createIndex({height:-1});\n// Transactions.rawCollection().createIndex({action:1});\nTransactions.rawCollection().createIndex({\"tags.key\":1});\nTransactions.rawCollection().createIndex({\"tags.value\":1});\n\nValidatorSets.rawCollection().createIndex({block_height:-1});\n\nValidators.rawCollection().createIndex({address:1},{unique:true, partialFilterExpression: { address: { $exists: true } } });\nValidators.rawCollection().createIndex({consensus_pubkey:1},{unique:true});\nValidators.rawCollection().createIndex({\"pub_key.value\":1},{unique:true, partialFilterExpression: { \"pub_key.value\": { $exists: true } }});\n\nVotingPowerHistory.rawCollection().createIndex({address:1,height:-1});\nVotingPowerHistory.rawCollection().createIndex({type:1});\n\nCoinStats.rawCollection().createIndex({last_updated_at:-1},{unique:true});\n","// Import server startup through a single index entry point\n\nimport './util.js';\nimport './register-api.js';\nimport './create-indexes.js';\n\n// import React from 'react';\n// import { renderToNodeStream } from 'react-dom/server';\n// import { renderToString } from \"react-dom/server\";\nimport { onPageLoad } from 'meteor/server-render';\n// import { StaticRouter } from 'react-router-dom';\n// import { ServerStyleSheet } from \"styled-components\"\nimport { Helmet } from 'react-helmet';\n\n// import App from '../../ui/App.jsx';\n\nonPageLoad(sink => {\n    // const context = {};\n    // const sheet = new ServerStyleSheet()\n\n    // const html = renderToString(sheet.collectStyles(\n    //     <StaticRouter location={sink.request.url} context={context}>\n    //         <App />\n    //     </StaticRouter>\n    //   ));\n\n    // sink.renderIntoElementById('app', html);\n\n    const helmet = Helmet.renderStatic();\n    sink.appendToHead(helmet.meta.toString());\n    sink.appendToHead(helmet.title.toString());\n\n    // sink.appendToHead(sheet.getStyleTags());\n});","// Register your apis here\n\nimport '../../api/chain/server/methods.js';\nimport '../../api/chain/server/publications.js';\n\nimport '../../api/blocks/server/methods.js';\nimport '../../api/blocks/server/publications.js';\n\nimport '../../api/validators/server/methods.js';\nimport '../../api/validators/server/publications.js';\n\nimport '../../api/records/server/methods.js';\nimport '../../api/records/server/publications.js';\n\nimport '../../api/proposals/server/methods.js';\nimport '../../api/proposals/server/publications.js';\n\nimport '../../api/fundingcycles/server/methods.js';\nimport '../../api/fundingcycles/server/publications.js';\n\nimport '../../api/voting-power/server/publications.js';\n\nimport '../../api/transactions/server/methods.js';\nimport '../../api/transactions/server/publications.js';\n\nimport '../../api/delegations/server/methods.js';\nimport '../../api/delegations/server/publications.js';\n\nimport '../../api/status/server/publications.js';\n\nimport '../../api/accounts/server/methods.js';\n\nimport '../../api/coin-stats/server/methods.js';","import bech32 from 'bech32'\nimport { HTTP } from 'meteor/http';\nimport * as cheerio from 'cheerio';\n\n// Load future from fibers\nvar Future = Npm.require(\"fibers/future\");\n// Load exec\nvar exec = Npm.require(\"child_process\").exec;\n\nfunction toHexString(byteArray) {\n    return byteArray.map(function(byte) {\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n    }).join('')\n}\n\nMeteor.methods({\n    pubkeyToBech32: function(pubkey, prefix) {\n        // '1624DE6420' is ed25519 pubkey prefix\n        let pubkeyAminoPrefix = Buffer.from('1624DE6420', 'hex')\n        let buffer = Buffer.alloc(37)\n        pubkeyAminoPrefix.copy(buffer, 0)\n        Buffer.from(pubkey.value, 'base64').copy(buffer, pubkeyAminoPrefix.length)\n        return bech32.encode(prefix, bech32.toWords(buffer))\n    },\n    bech32ToPubkey: function(pubkey) {\n        // '1624DE6420' is ed25519 pubkey prefix\n        let pubkeyAminoPrefix = Buffer.from('1624DE6420', 'hex')\n        let buffer = Buffer.from(bech32.fromWords(bech32.decode(pubkey).words));\n        return buffer.slice(pubkeyAminoPrefix.length).toString('base64');\n    },\n    getDelegator: function(operatorAddr){\n        let address = bech32.decode(operatorAddr);\n        return bech32.encode(Meteor.settings.public.bech32PrefixAccAddr, address.words);\n    },\n    getKeybaseTeamPic: function(keybaseUrl){\n        let teamPage = HTTP.get(keybaseUrl);\n        if (teamPage.statusCode == 200){\n            let page = cheerio.load(teamPage.content);\n            return page(\".kb-main-card img\").attr('src');\n        }\n    }\n})\n","import React from 'react';\n// import { Badge } from 'reactstrap';\nimport i18n from 'meteor/universe:i18n';\n\nconst T = i18n.createComponent();\nexport const DenomSymbol = (props) => {\n    switch (props.denom){\n    case \"steak\":\n        return '🥩';\n    default:\n        return '🍅';\n    }\n}\n\n\nexport const ProposalStatusIcon = (props) => {\n    switch (props.status){\n    case 'Passed':\n        return <i className=\"fas fa-check-circle text-success\"></i>;\n    case 'Rejected':\n        return <i className=\"fas fa-times-circle text-danger\"></i>;\n    case 'Removed':\n        return <i className=\"fas fa-trash-alt text-dark\"></i>\n    case 'DepositPeriod':\n        return <i className=\"fas fa-battery-half text-warning\"></i>;\n    case 'VotingPeriod':\n        return <i className=\"fas fa-hand-paper text-info\"></i>;\n    default:\n        return <i></i>;\n    }\n}\n\nexport const VoteIcon = (props) => {\n    switch (props.vote){\n    case 'yes':\n        return <i className=\"fas fa-check text-success\"></i>;\n    case 'no':\n        return <i className=\"fas fa-times text-danger\"></i>;\n    case 'abstain':\n        return <i className=\"fas fa-user-slash text-warning\"></i>;\n    case 'no_with_veto':\n        return <i className=\"fas fa-exclamation-triangle text-info\"></i>;\n    default:\n        return <i></i>;\n    }\n}\n\nexport const TxIcon = (props) => {\n    if (props.valid){\n        return <span className=\"text-success text-nowrap\"><i className=\"fas fa-check-circle\">Success</i></span>;\n    }\n    else{\n        return <span className=\"text-danger text-nowrap\"><i className=\"fas fa-times-circle\">Failed</i></span>;\n    }\n}","import { Meteor } from 'meteor/meteor';\nimport numbro from 'numbro';\n\nautoformat = (value) => {\n\tlet formatter = '0,0.0000';\n\tvalue = Math.round(value * 1000) / 1000\n\tif (Math.round(value) === value)\n\t\tformatter = '0,0'\n\telse if (Math.round(value*10) === value*10)\n\t\tformatter = '0,0.0'\n\telse if (Math.round(value*100) === value*100)\n\t\tformatter = '0,0.00'\n\telse if (Math.round(value*1000) === value*1000)\n\t\tformatter = '0,0.000'\n\treturn numbro(value).format(formatter)\n}\n\nexport default class Coin {\n\tstatic StakingDenom = Meteor.settings.public.stakingDenom.toLowerCase();\n\tstatic MintingDenom = Meteor.settings.public.mintingDenom.toLowerCase();\n\tstatic StakingFraction = Number(Meteor.settings.public.stakingFraction);\n\tstatic MinStake = 1 / Number(Meteor.settings.public.stakingFraction);\n\n\tconstructor(amount, denom=null) {\n\t\tif (typeof amount === 'object')\n\t\t\t({amount, denom} = amount)\n\t\tif (!denom || denom.toLowerCase() === Coin.MintingDenom) {\n\t\t\tthis._amount = Number(amount);\n\t\t} else if (denom.toLowerCase() === Coin.StakingDenom) {\n\t\t\tthis._amount = Number(amount) * Coin.StakingFraction;\n\t\t}\n\t\telse {\n\t\t\tthrow Error(`unsupported denom ${denom}`);\n\t\t}\n\t}\n\n\tget amount () {\n\t\treturn this._amount;\n\t}\n\n\tget stakingAmount () {\n\t\treturn this._amount;\n\t}\n\n\ttoString (precision) {\n\t\t// default to display in mint denom if it has more than 4 decimal places\n\t\tlet minStake = Coin.StakingFraction/(precision?Math.pow(10, precision):10000)\n\t\tif (this.amount < minStake) {\n\t\t\treturn `${numbro(this.amount).format('0,0')} ${Coin.MintingDenom}`;\n\t\t} else {\n\t\t\treturn `${precision?numbro(this.stakingAmount).format('0,0.' + '0'.repeat(precision)):autoformat(this.stakingAmount)} ${Coin.MintingDenom}`\n\t\t}\n\t}\n\n\tmintString (formatter) {\n\t\tlet amount = this.amount\n\t\tif (formatter) {\n\t\t\tamount = numbro(amount).format(formatter)\n\t\t}\n\t\treturn `${amount} ${Coin.MintingDenom}`;\n\t}\n\n\tstakeString (formatter) {\n\t\tlet amount = this.stakingAmount\n\t\tif (formatter) {\n\t\t\tamount = numbro(amount).format(formatter)\n\t\t}\n\t\treturn `${amount} ${Coin.MintingDenom}`;\n\t}\n}","// Server entry point, imports all server code\n\nimport '/imports/startup/server';\nimport '/imports/startup/both';\n// import moment from 'moment';\n// import '/imports/api/blocks/blocks.js';\n\nSYNCING = false;\nCOUNTMISSEDBLOCKS = false;\nRPC = Meteor.settings.remote.rpc;\nLCD = Meteor.settings.remote.lcd;\ntimerBlocks = 0;\ntimerChain = 0;\ntimerConsensus = 0;\ntimerProposal = 0;\ntimerFundingCycle = 0;\ntimerProposalsResults = 0;\ntimerMissedBlock = 0;\ntimerDelegation = 0;\ntimerAggregate = 0;\n\n\nupdateChainStatus = () => {\n    Meteor.call('chain.updateStatus', (error, result) => {\n        if (error){\n            console.log(\"updateStatus: \"+error);\n        }\n        else{\n            console.log(\"updateStatus: \"+result);\n        }\n    })\n}\n\nupdateBlock = () => {\n    Meteor.call('blocks.blocksUpdate', (error, result) => {\n        if (error){\n            console.log(\"updateBlocks: \"+error);\n        }\n        else{\n            console.log(\"updateBlocks: \"+result);\n        }\n    })\n}\n\ngetConsensusState = () => {\n    Meteor.call('chain.getConsensusState', (error, result) => {\n        if (error){\n            console.log(\"get consensus: \"+error)\n        }\n    })\n}\n\ngetProposals = () => {\n    Meteor.call('proposals.getProposals', (error, result) => {\n        if (error){\n            console.log(\"get proposal: \"+ error);\n        }\n        if (result){\n            console.log(\"get proposal: \"+result);\n        }\n    });\n}\n\ngetFundingCycles = () => {\n    Meteor.call('FundingCycles.getFundingCycles', (error, result) => {\n        if (error){\n            console.log(\"get Funding Cycle: \"+ error);\n        }\n        if (result){\n            console.log(\"get Funding Cycle: \"+result);\n        }\n    });\n}\n\ngetProposalsResults = () => {\n    Meteor.call('proposals.getProposalResults', (error, result) => {\n        if (error){\n            console.log(\"get proposals result: \"+error);\n        }\n        if (result){\n            console.log(\"get proposals result: \"+result);\n        }\n    });\n}\n\nupdateMissedBlockStats = () => {\n    Meteor.call('ValidatorRecords.calculateMissedBlocks', (error, result) =>{\n        if (error){\n            console.log(\"missblocks error: \"+ error)\n        }\n        if (result){\n            console.log(\"missed blocks ok:\" + result);\n        }\n    });\n}\n\ngetDelegations = () => {\n    Meteor.call('delegations.getDelegations', (error, result) => {\n        if (error){\n            console.log(\"get delegation error: \"+ error)\n        }\n        else{\n            console.log(\"get delegtaions ok: \"+ result)\n        }\n    });\n}\n\naggregateMinutely = () =>{\n    // doing something every min\n    Meteor.call('Analytics.aggregateBlockTimeAndVotingPower', \"m\", (error, result) => {\n        if (error){\n            console.log(\"aggregate minutely block time error: \"+error)\n        }\n        else{\n            console.log(\"aggregate minutely block time ok: \"+result)\n        }\n    });\n\n    Meteor.call('coinStats.getCoinStats', (error, result) => {\n        if (error){\n            console.log(\"get coin stats: \"+error);\n        }\n        else{\n            console.log(\"get coin stats ok: \"+result)\n        }\n    });\n}\n\naggregateHourly = () =>{\n    // doing something every hour\n    Meteor.call('Analytics.aggregateBlockTimeAndVotingPower', \"h\", (error, result) => {\n        if (error){\n            console.log(\"aggregate hourly block time error: \"+error)\n        }\n        else{\n            console.log(\"aggregate hourly block time ok: \"+result)\n        }\n    });\n}\n\naggregateDaily = () =>{\n    // doing somthing every day\n    Meteor.call('Analytics.aggregateBlockTimeAndVotingPower', \"d\", (error, result) => {\n        if (error){\n            console.log(\"aggregate daily block time error: \"+error)\n        }\n        else{\n            console.log(\"aggregate daily block time ok: \"+result)\n        }\n    });\n\n    Meteor.call('Analytics.aggregateValidatorDailyBlockTime', (error, result) => {\n        if (error){\n            console.log(\"aggregate validators block time error:\"+ error)\n        }\n        else {\n            console.log(\"aggregate validators block time ok:\"+ result);\n        }\n    })\n}\n\n\n\nMeteor.startup(function(){\n    if (Meteor.isDevelopment){\n        process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0;\n    }\n\n    Meteor.call('chain.genesis', (err, result) => {\n        if (err){\n            console.log(err);\n        }\n        if (result){\n            if (Meteor.settings.debug.startTimer){\n                timerConsensus = Meteor.setInterval(function(){\n                    getConsensusState();\n                }, Meteor.settings.params.consensusInterval);\n\n                timerBlocks = Meteor.setInterval(function(){\n                    updateBlock();\n                }, Meteor.settings.params.blockInterval);\n\n                timerChain = Meteor.setInterval(function(){\n                    updateChainStatus();\n                }, Meteor.settings.params.statusInterval);\n\n                timerProposal = Meteor.setInterval(function(){\n                    getProposals();\n                }, Meteor.settings.params.proposalInterval);\n\n                timerFundingCycle = Meteor.setInterval(function(){\n                    getFundingCycles();\n                }, Meteor.settings.params.fundingCycleInterval);\n\n                timerProposalsResults = Meteor.setInterval(function(){\n                    getProposalsResults();\n                }, Meteor.settings.params.proposalInterval);\n                \n                timerMissedBlock = Meteor.setInterval(function(){\n                    updateMissedBlockStats();\n                }, Meteor.settings.params.missedBlocksInterval);\n            \n                timerDelegation = Meteor.setInterval(function(){\n                    getDelegations();\n                }, Meteor.settings.params.delegationInterval);\n\n                timerAggregate = Meteor.setInterval(function(){\n                    let now = new Date();\n                    if ((now.getUTCSeconds() == 0)){\n                        aggregateMinutely();\n                    }\n            \n                    if ((now.getUTCMinutes() == 0) && (now.getUTCSeconds() == 0)){\n                        aggregateHourly();\n                    }\n            \n                    if ((now.getUTCHours() == 0) && (now.getUTCMinutes() == 0) && (now.getUTCSeconds() == 0)){\n                        aggregateDaily();\n                    }\n                }, 1000)\n            }\n        }\n    })\n\n});"]}